<?php

namespace App\Http\Livewire\Reports;

use Livewire\Component;
use App\Models\loans_schedules;
use Carbon\Carbon;
use App\Models\issured_shares;
use App\Models\LoansModel;
use App\Models\BranchesModel;
use App\Models\Employee;
use Illuminate\Support\Facades\DB;
use App\Models\sub_products;
use DateTime;
use Mediconesystems\LivewireDatatables\Action;

use Illuminate\Support\Str;
use Mediconesystems\LivewireDatatables\Column;
use Mediconesystems\LivewireDatatables\NumberColumn;
use Mediconesystems\LivewireDatatables\DateColumn;
use Mediconesystems\LivewireDatatables\Http\Livewire\LivewireDatatable;
use Illuminate\Support\Facades\Session;
use App\Models\search;
class DailyTable extends LivewireDatatable
{

    public $exportable = true;
    public $array=[];
    protected $listeners = [
        'refreshSavingsComponent' => '$refresh',
        'sortLoanId' => 'sortLoanId',
    ];



    public function sortLoanId($value)
    {
        $this->array = $value;
    }

    public function builder(){

        $query=LoansModel::query();
        //->where('status','ACTIVE');

    //    if(!empty($this->array)){
           $query=$query->whereIn('id',$this->array);
           //->where('branch_id',session()->get('sortingBranch'));
    //    }



       return  $query;


    }



public function columns()
{
    return [

        Column::index($this),
        // column::name('heath')->label('health'),
        // column::name('updated_at')->label('health'),

       // column::name('id')->label('id'),


        column::name('created_at')->label('issue date') ,
        // column::name('loan_id')->label(label: 'id'),

        column::callback(['loan_id','member_number'],function($loan_number,$member_no){

            $member= DB::table('members')->where('member_number',$member_no)->first();
            return $member ?->first_name.' '. $member ?->middle_name.'  '. $member ?->last_name ;

        })->label('account Name'),

        //column::name('member_number')->label('client number'),
        column::callback('loan_sub_product',function($sub_product_id){
            return DB::table('loan_sub_products')->where('sub_product_id',$sub_product_id)->value('sub_product_name');
        })->label('product name')->filterable(DB::table('loan_sub_products')->pluck('sub_product_name', 'sub_product_id')->toArray()),


        column::callback('branch_id',function($branch_id){
            return BranchesModel::where('id',$branch_id)->value('name');
        })->label('branch'),
        column::callback('principle',function($principle){
            return number_format($principle);
        })->label('principle')->searchable(),

        Column::callback(['interest','principle'],function($interest,$principle){
            return number_format($interest*$principle/100 ,2);
        })->label('interest Amount'),
        column::callback('interest',function ($interest){
            return $interest.'%';
        })->label('interest')->searchable(),
        column::name('tenure')->label('tenure') ->enableSummary(),
        column::name('status')->label('status')


    ];

    // TODO: Change the autogenerated stub
}


public function buildActions()
    {
        return [

            // Action::value('edit')->label('Edit Selected')->group('Default Options')->callback(function ($mode, $items) {
            //     // $items contains an array with the primary keys of the selected items
            // }),

            // Action::value('update')->label('Update Selected')->group('Default Options')->callback(function ($mode, $items) {
            //     // $items contains an array with the primary keys of the selected items
            // }),

            Action::groupBy('Export Options', function () {
                return [
                    Action::value('csv')->label('Export CSV')->export('loanPortifolio.csv'),
                    Action::value('html')->label('Export HTML')->export('loanPortifolio.html'),
                   // Action::value('xlsx')->label('Export XLSX')->export('loanPortifolio.xlsx')->styles($this->exportStyles)->widths($this->exportWidths)
                ];
            }),
        ];
    }




}
